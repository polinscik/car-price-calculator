//1. Набор из элементов управления, размещаемых на Web-странице;
//2. Формы служат для отправки данных от пользователя на сервер.
//3. type="text"
//4. Через document.forms.myForm[i], где i - индекс элемента. document.myForm["formBtn"]; document.myForm.formBtn - по имени элемента.\
//5. В атрибуте action можно указать функцию, которая будет выполняться при вызове метода submit().
//6. Тип - объект. (HTMLFormControlsCollection)
//7.
function validateCard(creditCardField) {
    const cardFormat =
        /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/;
    if (creditCardField.value.match(cardFormat)) {
        return true;
    } else {
        console.log("Номер кредитной карты введён неверно!");
        return false;
    }
}
// 8. Также с помощью метода reset();
//9. Указать адрес сервера в атрибуте action и метод post в атрибуте method.
//10. Использовать функцию evt.preventDefault();
//11. Можно проверить поле на факт заполнения, но не на корректность данных. Нет возможности валидации телефонных номеров с помощью типа tel. Нельзя стилизовать сообщения об ошибках. Стили на невалидных полях применяются сразу пи загрузке страницы.
